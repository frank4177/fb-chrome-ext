import { useState, useEffect } from 'react'

import './Popup.css'

export const Popup = () => {
  const [state, setState] = useState(null)

  // useEffect(() => {
  //   // Fetch the state from Chrome storage on component mount
  //   chrome.storage.local.get(['state'], function (result) {
  //     console.log('Current state:', result.state)
  //     setCount(result.state)
  //   })
  // }, [])

  async function fetchNextProfile() {
    try {
      const response = await fetch('https://mkdlabs.com/v3/api/custom/owlco/next_profile', {
        headers: {
          'x-project': 'b3dsY286Y3VjOWxhdTRyMmoybHllNHQxaXYzMHl3bjM4dm5iYQ==',
        },
      })
      if (!response.ok) {
        alert('Fetch Profile API error')
        throw new Error('Network response was not ok.')
      }

      const data = await response.json()
      console.log(data.model.facebook_profile_link)

      const urll = data.model.facebook_profile_link
      const batchid = data.model.batch_number
      const fbid = data.model.id
      const dataa = data

      // setCount(dataa);  // Storing whole object, might need just part of it?
      return dataa // Returning data for further processing
    } catch (error) {
      console.error(error)
      throw error // Handling error appropriately
    }
  }

  const collectUrls = async () => {
    // const profileData = await fetchNextProfile();  // Await the API response

    // chrome.storage.local.set({ state: 'collectPosts' }, () => {
    //   console.log('State set to collectPosts')
    // })

    // setState("collectPosts")

    chrome.tabs.query({ active: true, currentWindow: true }, (tabs) => {
      // chrome.storage.local.set({ profileData }, () => {  // Storing the data
      //   console.log('Profile data is set:', profileData);

      // });
      chrome.tabs.sendMessage(tabs[0].id, { action: 'collectUrls' }, (response) => {
        console.log(response)
      })
    })
  }

  const navigate = async () => {
    const profileData = await fetchNextProfile() // Await the API response

    // chrome.storage.local.set({ state: 'navigation' }, () => {
    //   // Storing the data
    //   console.log('State set to navigation')
    // })

    // setState("navigation")

    chrome.tabs.query({ active: true, currentWindow: true }, (tabs) => {
      chrome.storage.local.set({ profileData }, () => {
        // Storing the data
        console.log('Profile data is set:', profileData)
        chrome.tabs.sendMessage(tabs[0].id, { action: 'navigate' }, (response) => {
          console.log(response)
        })
      })
    })
  }

  return (
    <main>
      <h3>Facebook PPG</h3>
      {/* <div className="calc">
        <button onClick={minus} disabled={count <= 0}>
          -
      //   </button>
      //   <label>{count}</label>
      //   <button onClick={add}>+</button>
      // </div>
      <a href={link} target="_blank">
        generated by create-chrome-ext shshsh
      </a> */}

      <header className="App-header" style={{ display: 'flex', alignItems: 'center', gap: '5px' }}>
        <button onClick={navigate}>Navigate</button>
        <button onClick={collectUrls}>Collect URLs</button>
      </header>
    </main>
  )
}

export default Popup
